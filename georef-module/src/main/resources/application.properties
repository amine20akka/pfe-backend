spring.application.name=georef-module

### ========== Server Configuration ==========
server.port=8081
server.error.include-message=always

### ========== GDAL ==========
gdal.server.url=http://localhost:5000

### ========== GeoServer ==========
geoserver.url=http://localhost:8080/geoserver
geoserver.workspace=georef
geoserver.username=admin
geoserver.password=geoserver

### ========== DATABASE - POSTGRESQL ==========
spring.datasource.url=jdbc:postgresql://localhost:5432/pfe_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Schema par défaut
spring.jpa.properties.hibernate.default_schema=georef


### ========== RABBITMQ ==========
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Nom de la queue pour les images à traiter
georef.queue.image-processing=image.processing.queue


### ========== FILE STORAGE (local paths) ==========
# Chemin relatif
georef.storage.base-path=./georef-storage

# Emplacement pour les images originales uploadées
georef.storage.original-dir=${georef.storage.base-path}/originals

# Emplacement pour les images géoréférencées
georef.storage.georeferenced-dir=${georef.storage.base-path}/georeferenced


### ========== MULTIPART UPLOAD ==========
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


### ========== JACKSON CONFIG ==========
spring.jackson.serialization.WRITE_ENUMS_USING_TO_STRING=true
spring.jackson.deserialization.READ_ENUMS_USING_TO_STRING=true


### ========== SWAGGER ==========
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html